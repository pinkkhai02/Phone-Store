{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    accessToken: localStorage.getItem(\"AT\") || \"\"\n  },\n  reducers: {\n    register: (state, action) => {\n      state.user = action.payload.account;\n      state.accessToken = action.payload.accessToken;\n      localStorage.setItem(\"AT\", state.accessToken);\n    },\n    login: (state, action) => {\n      state.user = action.payload.account;\n      state.accessToken = action.payload.accessToken;\n      localStorage.setItem(\"AT\", state.accessToken);\n    },\n    logout: state => {\n      state.user = null;\n      state.accessToken = \"\";\n      localStorage.setItem(\"AT\", state.accessToken);\n    },\n    setProfile: (state, action) => {\n      state.user = action.payload;\n    },\n    refreshToken: (state, action) => {\n      state.accessToken = action.payload;\n      localStorage.setItem(\"AT\", state.accessToken);\n    }\n  }\n});\nexport const authSelector = state => state.auth;\nexport const authActions = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","authSlice","name","initialState","user","accessToken","localStorage","getItem","reducers","register","state","action","payload","account","setItem","login","logout","setProfile","refreshToken","authSelector","auth","authActions","actions","reducer"],"sources":["D:/Hoc tap/ReactJS/Maltimart-ecommerce/src/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    user: null,\r\n    accessToken: localStorage.getItem(\"AT\") || \"\",\r\n  },\r\n  reducers: {\r\n    register: (state, action) => {\r\n      state.user = action.payload.account;\r\n      state.accessToken = action.payload.accessToken;\r\n      localStorage.setItem(\"AT\", state.accessToken);\r\n    },\r\n    login: (state, action) => {\r\n      state.user = action.payload.account;\r\n      state.accessToken = action.payload.accessToken;\r\n      localStorage.setItem(\"AT\", state.accessToken);\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.accessToken = \"\";\r\n      localStorage.setItem(\"AT\", state.accessToken);\r\n    },\r\n    setProfile: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    refreshToken: (state, action) => {\r\n      state.accessToken = action.payload;\r\n      localStorage.setItem(\"AT\", state.accessToken);\r\n    },\r\n  },\r\n});\r\nexport const authSelector = (state) => state.auth;\r\nexport const authActions = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IACZC,IAAI,EAAE,IADM;IAEZC,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,IAArB,KAA8B;EAF/B,CAFc;EAM5BC,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC3BD,KAAK,CAACN,IAAN,GAAaO,MAAM,CAACC,OAAP,CAAeC,OAA5B;MACAH,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAAP,CAAeP,WAAnC;MACAC,YAAY,CAACQ,OAAb,CAAqB,IAArB,EAA2BJ,KAAK,CAACL,WAAjC;IACD,CALO;IAMRU,KAAK,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;MACxBD,KAAK,CAACN,IAAN,GAAaO,MAAM,CAACC,OAAP,CAAeC,OAA5B;MACAH,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAAP,CAAeP,WAAnC;MACAC,YAAY,CAACQ,OAAb,CAAqB,IAArB,EAA2BJ,KAAK,CAACL,WAAjC;IACD,CAVO;IAWRW,MAAM,EAAGN,KAAD,IAAW;MACjBA,KAAK,CAACN,IAAN,GAAa,IAAb;MACAM,KAAK,CAACL,WAAN,GAAoB,EAApB;MACAC,YAAY,CAACQ,OAAb,CAAqB,IAArB,EAA2BJ,KAAK,CAACL,WAAjC;IACD,CAfO;IAgBRY,UAAU,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;MAC7BD,KAAK,CAACN,IAAN,GAAaO,MAAM,CAACC,OAApB;IACD,CAlBO;IAmBRM,YAAY,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;MAC/BD,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAA3B;MACAN,YAAY,CAACQ,OAAb,CAAqB,IAArB,EAA2BJ,KAAK,CAACL,WAAjC;IACD;EAtBO;AANkB,CAAD,CAA7B;AA+BA,OAAO,MAAMc,YAAY,GAAIT,KAAD,IAAWA,KAAK,CAACU,IAAtC;AACP,OAAO,MAAMC,WAAW,GAAGpB,SAAS,CAACqB,OAA9B;AACP,eAAerB,SAAS,CAACsB,OAAzB"},"metadata":{},"sourceType":"module"}