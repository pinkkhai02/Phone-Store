{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: [],\n  totalAmount: 0,\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  // initialState,\n  // reducers: {\n  //   addItem: (state, action) => {\n  //     const newItem = action.payload;\n  //     const existingItem = state.cartItems.find(\n  //       (item) => item.id === newItem.id\n  //     );\n  //     state.totalQuantity++;\n  //     if (!existingItem) {\n  //       // state.cartItems.push({\n  //       //   id: newItem.id,\n  //       //   productName: newItem.productName,\n  //       //   imgUrl: newItem.imgUrl,\n  //       //   price: newItem.price,\n  //       //   quantity: 1,\n  //       //   totalPrice: newItem.price,\n  //       // });\n  //       state.cartItems.push(newItem);\n  //     } else {\n  //       existingItem._quantity++;\n  //       existingItem.totalPrice =\n  //         Number(existingItem.totalPrice) + Number(newItem.price);\n  //     }\n  //     state.totalAmount = state.cartItems.reduce(\n  //       (total, item) => total + Number(item.price) * Number(item._quantity),\n  //       0\n  //     );\n  //   },\n  //   deleteItem: (state, action) => {\n  //     const id = action.payload;\n  //     const existingItem = state.cartItems.find((item) => item.id === id);\n  //     if (existingItem) {\n  //       state.cartItems = state.cartItems.filter((item) => item.id !== id);\n  //       state.totalQuantity = state.totalQuantity - existingItem._quantity;\n  //     }\n  //     state.totalAmount = state.cartItems.reduce(\n  //       (total, item) => total + Number(item.price) * Number(item._quantity),\n  //       0\n  //     );\n  //   },\n  // },\n  initialState: {\n    cart: JSON.parse(localStorage.getItem(\"_cart_\")) || {\n      items: []\n    }\n  },\n  reducers: {\n    setCart: (state, action) => {\n      state.cart = action.payload ? action.payload : {\n        items: []\n      };\n      localStorage.setItem(\"_cart_\", JSON.stringify(state.cart || {\n        items: []\n      }));\n    },\n    addToCart: (state, action) => {\n      if (!state.cart) {\n        state.cart = {\n          items: []\n        };\n      }\n\n      const index = state.cart.items.findIndex(item => item.id === action.payload.id);\n\n      if (index === -1) {\n        state.cart.items = [action.payload, ...state.cart.items];\n      } else {\n        state.cart.items[index].quantity += action.payload.quantity;\n      }\n\n      localStorage.setItem(\"_cart_\", JSON.stringify(state.cart));\n    },\n    updateCartItem: (state, action) => {\n      const index = state.cart.items.findIndex(item => item.id === action.payload.id);\n\n      if (index !== -1) {\n        state.cart.items[index].quantity = action.payload.quantity;\n      }\n\n      localStorage.setItem(\"_cart_\", JSON.stringify(state.cart));\n    },\n    deleteCartItem: (state, action) => {\n      state.cart.items = state.cart.items.filter(item => item.id !== action.payload);\n      localStorage.setItem(\"_cart_\", JSON.stringify(state.cart));\n    }\n  }\n});\nexport const cartSelector = state => state.cart;\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalAmount","totalQuantity","cartSlice","name","cart","JSON","parse","localStorage","getItem","items","reducers","setCart","state","action","payload","setItem","stringify","addToCart","index","findIndex","item","id","quantity","updateCartItem","deleteCartItem","filter","cartSelector","cartActions","actions","reducer"],"sources":["D:/Hoc tap/ReactJS/Maltimart-ecommerce/src/redux/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  totalAmount: 0,\r\n  totalQuantity: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  // initialState,\r\n  // reducers: {\r\n  //   addItem: (state, action) => {\r\n  //     const newItem = action.payload;\r\n  //     const existingItem = state.cartItems.find(\r\n  //       (item) => item.id === newItem.id\r\n  //     );\r\n\r\n  //     state.totalQuantity++;\r\n\r\n  //     if (!existingItem) {\r\n  //       // state.cartItems.push({\r\n  //       //   id: newItem.id,\r\n  //       //   productName: newItem.productName,\r\n  //       //   imgUrl: newItem.imgUrl,\r\n  //       //   price: newItem.price,\r\n  //       //   quantity: 1,\r\n  //       //   totalPrice: newItem.price,\r\n  //       // });\r\n  //       state.cartItems.push(newItem);\r\n  //     } else {\r\n  //       existingItem._quantity++;\r\n  //       existingItem.totalPrice =\r\n  //         Number(existingItem.totalPrice) + Number(newItem.price);\r\n  //     }\r\n\r\n  //     state.totalAmount = state.cartItems.reduce(\r\n  //       (total, item) => total + Number(item.price) * Number(item._quantity),\r\n  //       0\r\n  //     );\r\n  //   },\r\n\r\n  //   deleteItem: (state, action) => {\r\n  //     const id = action.payload;\r\n  //     const existingItem = state.cartItems.find((item) => item.id === id);\r\n\r\n  //     if (existingItem) {\r\n  //       state.cartItems = state.cartItems.filter((item) => item.id !== id);\r\n  //       state.totalQuantity = state.totalQuantity - existingItem._quantity;\r\n  //     }\r\n\r\n  //     state.totalAmount = state.cartItems.reduce(\r\n  //       (total, item) => total + Number(item.price) * Number(item._quantity),\r\n  //       0\r\n  //     );\r\n  //   },\r\n  // },\r\n  initialState: {\r\n    cart: JSON.parse(localStorage.getItem(\"_cart_\")) || { items: [] },\r\n  },\r\n  reducers: {\r\n    setCart: (state, action) => {\r\n      state.cart = action.payload ? action.payload : { items: [] };\r\n      localStorage.setItem(\r\n        \"_cart_\",\r\n        JSON.stringify(state.cart || { items: [] })\r\n      );\r\n    },\r\n    addToCart: (state, action) => {\r\n      if (!state.cart) {\r\n        state.cart = {\r\n          items: [],\r\n        };\r\n      }\r\n      const index = state.cart.items.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (index === -1) {\r\n        state.cart.items = [action.payload, ...state.cart.items];\r\n      } else {\r\n        state.cart.items[index].quantity += action.payload.quantity;\r\n      }\r\n\r\n      localStorage.setItem(\"_cart_\", JSON.stringify(state.cart));\r\n    },\r\n    updateCartItem: (state, action) => {\r\n      const index = state.cart.items.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (index !== -1) {\r\n        state.cart.items[index].quantity = action.payload.quantity;\r\n      }\r\n      localStorage.setItem(\"_cart_\", JSON.stringify(state.cart));\r\n    },\r\n    deleteCartItem: (state, action) => {\r\n      state.cart.items = state.cart.items.filter(\r\n        (item) => item.id !== action.payload\r\n      );\r\n      localStorage.setItem(\"_cart_\", JSON.stringify(state.cart));\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartSelector = (state) => state.cart;\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}